<?php
/**
 * @autor Rixio Danilo Iguarán Chourio.
 * @cédula-profesional 12196442
 * @correo-eletrónico atencion.clientes@obringolfo.com
 * @denominacion OBRAS INFORMÁTICAS DEL GOLFO
 * @empresa OBRINGOLFO S.A.S. DE C.V.
 * @proyecto  goPAC.
 * @copyright 2021
 */


class VentasControlador extends ControladorBase{
    public $conector;
    public $adaptador;
    /** ****************************************************** **/
    public function __construct() {
        try {

            parent::__construct();
            $this->conector = new Conectar();
            $this->adaptador  = $this->conector->conexion();

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ****************************************************** **/
    public function index(){
        try {

            $caja = new Tpv_cajas($this->adaptador);
            $corte = new Tpv_cajas_cortes($this->adaptador);
            //Verificando si el usuario tiene una caja asignada para ventas
            $MyCaja = $caja->execSQL("SELECT * FROM tpv_cajas WHERE id_usuario = '".$_SESSION["usuario"]["id"]."' AND empresa_SDK = '".$_SESSION["Empresa"]["DBName"]."'");
            if($MyCaja){ //Hay una o varias cajas asignadas

                //Comprobamos si existe algun corte activo
                $MyCorte = $corte->execSQL("SELECT * FROM tpv_cajas_cortes WHERE id_caja=".$MyCaja[0]->id." AND estado='A'");
                if($MyCorte){ //Hay un corte activo y debemos de abrirlo

                    $_SESSION["caja"]["id"]             = $MyCaja[0]->id;
                    $_SESSION["caja"]["id_usuario"]     = $MyCaja[0]->id_usuario;
                    $_SESSION["caja"]["nombre"]         = $MyCaja[0]->nombre;
                    $_SESSION["caja"]["empresa_SDK"]    = $MyCaja[0]->empresa_SDK;
                    $_SESSION["caja"]["concepto_SDK"]   = $MyCaja[0]->concepto_SDK;
                    $_SESSION["caja"]["corte"]          = array(
                        "id" => $MyCorte[0]->id,
                        "fecha_inicio" => $MyCorte[0]->fecha_inicio,
                        "estado" => $MyCorte[0]->estado
                    );
                    $this->view("_header_app", array(null));
                    echo '<script type="text/javascript">
                        $.messager.alert({
                            title: "Corte de cajas activo",
                            msg: "Retomaremos tu corte de cajas [ '.$_SESSION["caja"]["corte"]["id"].' ].",
                            fn: function(){
                                goRedirect("Ventas", "open_tpv");
                            }
                        });
                    </script>';
                    $this->view("_footer_app", array(null));

                }else{ //No existen cortes activos
                    $_SESSION["caja"]["corte"]          = array(
                        "id" => 0,
                        "fecha_inicio" => time(),
                        "estado" => 'X'
                    );
                    if(count((array)$MyCaja) > 1){ //Varias cajas asignadas al usuario
                        $this->view("_header_app", array(null));
                        $this->view("tpv/tpv_seleccionar_caja", array("MyCajas" => $MyCaja));
                        $this->view("_footer_app", array(null));
                    }else{ //Solo tiene una caja
                        $_SESSION["caja"]["id"]             = $MyCaja[0]->id;
                        $_SESSION["caja"]["id_usuario"]     = $MyCaja[0]->id_usuario;
                        $_SESSION["caja"]["nombre"]         = $MyCaja[0]->nombre;
                        $_SESSION["caja"]["empresa_SDK"]    = $MyCaja[0]->empresa_SDK;
                        $_SESSION["caja"]["concepto_SDK"]   = $MyCaja[0]->concepto_SDK;
                        $this->view("_header_app", array(null));
                        $this->view("tpv/tpv_dinero_apertura", array(null));
                        $this->view("_footer_app", array(null));
                    }

                }

            }else{

                $this->view("_header_app", array(null));
                echo '<script type="text/javascript">
                    $.messager.alert({
                        title: "Sin autorización",
                        msg: "No tienes una caja asignada a tu usuario para ésta empresa.",
                        fn: function(){
                            goRedirect("Escritorio", "index");
                        }
                    });
                </script>';
                $this->view("_footer_app", array(null));

            }

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ****************************************************** **/
    public function open_tpv(){
        try {

            //Verificamos corte activo
            if(isset($_SESSION["caja"]["corte"]["estado"]) && ($_SESSION["caja"]["corte"]["estado"] == 'X')){ //No encontramos corte activo

                $corte = new Tpv_cajas_cortes($this->adaptador);
                $corte->setId_caja($_SESSION["caja"]["id"]);
                $corte->setFecha_inicio(time());
                if(isset($_POST["txt_M10C"])){ $corte->setM10c( $_POST["txt_M10C"] > 0 ? $_POST["txt_M10C"] : 0 ); }
                if(isset($_POST["txt_M20C"])){ $corte->setM20c( $_POST["txt_M20C"] > 0 ? $_POST["txt_M20C"] : 0 ); }
                if(isset($_POST["txt_M50C"])){ $corte->setM50c( $_POST["txt_M50C"] > 0 ? $_POST["txt_M50C"] : 0 ); }
                if(isset($_POST["txt_M1P"])){ $corte->setM1p( $_POST["txt_M1P"] > 0 ? $_POST["txt_M1P"] : 0 ); }
                if(isset($_POST["txt_M2P"])){ $corte->setM2p( $_POST["txt_M2P"] > 0 ? $_POST["txt_M2P"] : 0 ); }
                if(isset($_POST["txt_M5P"])){ $corte->setM5p( $_POST["txt_M5P"] > 0 ? $_POST["txt_M5P"] : 0 ); }
                if(isset($_POST["txt_M10P"])){ $corte->setM10p( $_POST["txt_M10P"] > 0 ? $_POST["txt_M10P"] : 0 ); }
                if(isset($_POST["txt_M20P"])){ $corte->setM20p( $_POST["txt_M20P"] > 0 ? $_POST["txt_M20P"] : 0 ); }
                if(isset($_POST["txt_B20P"])){ $corte->setB20p( $_POST["txt_B20P"] > 0 ? $_POST["txt_B20P"] : 0 ); }
                if(isset($_POST["txt_B50P"])){ $corte->setB50p( $_POST["txt_B50P"] > 0 ? $_POST["txt_B50P"] : 0 ); }
                if(isset($_POST["txt_B100P"])){ $corte->setB100p( $_POST["txt_B100P"] > 0 ? $_POST["txt_B100P"] : 0 ); }
                if(isset($_POST["txt_B200P"])){ $corte->setB200p( $_POST["txt_B200P"] > 0 ? $_POST["txt_B200P"] : 0 ); }
                if(isset($_POST["txt_B500P"])){ $corte->setB500p( $_POST["txt_B500P"] > 0 ? $_POST["txt_B500P"] : 0 ); }
                if(isset($_POST["txt_B1000P"])){ $corte->setB1000p( $_POST["txt_B1000P"] > 0 ? $_POST["txt_B1000P"] : 0 ); }
                if(isset($_POST["total_monedas"])){ $corte->setDinero_monedas($_POST["total_monedas"] > 0 ? $_POST["total_monedas"] : 0); }
                if(isset($_POST["total_billetes"])){ $corte->setDinero_billetes($_POST["total_billetes"] > 0 ? $_POST["total_billetes"] : 0); }
                if(isset($_POST["total_dinero"])){ $corte->setDinero_inicio($_POST["total_dinero"] > 0 ? $_POST["total_dinero"] : 0); }
                $corte->setEstado("A");
                $corte->SaveData();

            }
            //Conectamos la interface
            $this->view("_header_app", array(null));
            $this->view("tpv/tpv_terminal", array(null));
            $this->view("_footer_app", array(null));

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }

    /** ****************************************************** **/
    public function open_Caja(){
        try{
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');
            $MyRESPONSE = array();

            if(isset($_POST["caja"]) && !$_POST["caja"] == ""){
                $MyComercial = new COM("ContPAQi.CiComercialSdk");
                $MyComercial->setNoCaja($_POST["caja"]);
                $MyRESPONSE["error"] = 0;
                $MyRESPONSE["json"] = $MyComercial->OpenCaja();
            }else{
                $MyRESPONSE["error"] = 200;
            }

            echo json_encode($MyRESPONSE);


        } catch (Exception $e) {
            mostrar_error($e);
        }
    }

    /** ****************************************************** **/
    public function new_Venta(){
        try{
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');

            $cajas = new Tpv_cajas($this->adaptador);
            $venta = new Tpv_ventas($this->adaptador);
            //Realizo la apertura de la caja en el Middleware
            //$MyComercial = new COM("ContPAQi.CiComercialSdk");
            //$jsonSTR = $MyComercial->OpenCaja($_POST['caja']);
            $MyCaja = $cajas->execSQL("SELECT * FROM tpv_cajas WHERE id = " + $_SESSION["caja"]["id"] + ";");
            //$ClienteSdk = new COM("ContPAQi.ClienteSdk");
            //$cPublicoG = json_decode($ClienteSdk->BuscarClientePorCodigo("XAXX010101000", "1"));
            //$DocumentoSdk = new COM("ContPAQi.DocumentoSdk");
            //$cSerieFolio = json_decode($DocumentoSdk->BuscarSiguienteSerieYFolio($_SESSION["caja"]["id"]));

            $existe = $venta->execSQL("SELECT * FROM tpv_ventas WHERE folio='".$cSerieFolio->Folio."' AND serie='".$cSerieFolio->Serie."';");
            if($existe){
                //Cargar la venta desde la DB
                $_SESSION["caja"]["venta"] = array(
                    "Serie"         => $existe[0]->serie,
                    "Folio"         => $existe[0]->folio,
                    "Fecha"         => $existe[0]->fecha,
                    "Cliente"       => $existe[0]->cliente,
                    "Descuentos"    => $existe[0]->descuentos,
                    "Total"         => $existe[0]->total,
                    "Tipopago"      => $existe[0]->tipopago,
                    "Tipoventa"     => $existe[0]->tipoventa,
                    "Estado"        => $existe[0]->estado
                );

            }else{
                //Registrar venta en la DB
                $MyTiempo = time();
                $venta->setId_corte($_SESSION["caja"]["corte"]["id"]);
                $venta->setSerie($cSerieFolio->Serie);
                $venta->setFolio($cSerieFolio->Folio);
                $venta->setFecha($MyTiempo);
                $venta->setCliente($cPublicoG->Rfc);
                $venta->setDescuentos(0);
                $venta->setTotal(0);
                $venta->setTipopago('');
                $venta->setTipoventa('');
                $venta->setEstado('A');
                $venta->saveData();

                $_SESSION["caja"]["venta"] = array(
                    "Serie"         => $cSerieFolio->Serie,
                    "Folio"         => $cSerieFolio->Folio,
                    "Fecha"         => $MyTiempo,
                    "Cliente"       => $cPublicoG->Rfc,
                    "Descuentos"    => 0,
                    "Total"         => 0,
                    "Tipopago"      => '',
                    "Tipoventa"     => '',
                    "Estado"        => 'A',
                );
            }

            echo $jsonSTR;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ****************************************************** **/
    public function get_Producto(){
        try {
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');
            $MyRESP = array();

            if( isset($_POST['codigo']) && ($_POST['codigo'] != '') &&
                isset( $_POST['cantidad']) && ( $_POST['cantidad'] != '') &&
                isset($_SESSION["caja"]["id"]) && ($_SESSION["caja"]["id"] != '')
            ){
                //Busco los datos del producto en el Middleware
                $MyProductoSdk = new COM("ContPAQi.ProductoSdk");
                $MyProductoSdk->setNoCaja($_SESSION["caja"]["id"]);
                $jsonSTR =  $MyProductoSdk->http_BuscarPorCodigo($_POST['codigo']);
                if($jsonSTR != ""){
                    //Procesando los datos del producto
                    $json_OBJ = json_decode($jsonSTR); //Json a Objeto
                    $MyRESP["Codigo"] = 0;
                    $MyRESP["Producto"] = array();
                    $MyRESP["Producto"]["Codigo"]   = $json_OBJ->Codigo;
                    $MyRESP["Producto"]["Nombre"]   = $json_OBJ->Nombre;
                    $MyRESP["Producto"]["Precio"]   = $json_OBJ->Precio;
                    $MyRESP["Producto"]["Estado"]   = $json_OBJ->Estado;
                    $MyRESP["Producto"]["Tipo"]     = $json_OBJ->Tipo;                   
                    $MyRESP["Producto"]["TieneCaracteristicas"] = ($json_OBJ->TieneCaracteristicas=="True" ? true : false);
                    if($MyRESP["Producto"]["TieneCaracteristicas"]){
                        $MyRESP["Producto"]["Caracteristica1_Nombre"]   = Utf8_ansi($json_OBJ->Caracteristica1_Nombre);
                        $MyRESP["Producto"]["Caracteristica1_Valores"]  = Utf8_ansi($json_OBJ->Caracteristica1_Valores);
                        $MyRESP["Producto"]["Caracteristica2_Nombre"]   = Utf8_ansi($json_OBJ->Caracteristica2_Nombre);
                        $MyRESP["Producto"]["Caracteristica2_Valores"]  = Utf8_ansi($json_OBJ->Caracteristica2_Valores);
                        $MyRESP["Producto"]["Caracteristica3_Nombre"]   = Utf8_ansi($json_OBJ->Caracteristica3_Nombre);
                        $MyRESP["Producto"]["Caracteristica3_Valores"]  = Utf8_ansi($json_OBJ->Caracteristica3_Valores);   
                    }else{
                        $MyRESP["Producto"]["Existencias"] = $this->get_ExistenciaAlmacen($json_OBJ->Codigo);
                    }
                    
                }else{
                    $MyRESP["Codigo"] = 404;
                }

            }else{
                $MyRESP["Codigo"] = 403;
            }

            echo json_encode($MyRESP);

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ****************************************************** **/
    public function get_ExistenciaAlmacen($CodigoProducto = null){
        try {
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');
            $MyRESP = array();
            if($CodigoProducto == null){ //El usuario envía un parametro POST
                $CodigoProducto = $_POST["codigo"];
            }

            $MyProductoSdk = new COM("ContPAQi.ProductoSdk");
            $MyProductoSdk->setNoCaja($_SESSION["caja"]["id"]);
            //Creamos el objeto << ALMACENES DE CAJA >>
            $cajas_almacenes = new Tpv_cajas_almacenes($this->adaptador);
            $MyAlmacenes = $cajas_almacenes->getBy("id_caja", $_SESSION["caja"]["id"]);
            if(!empty($MyAlmacenes)){ //La caja tiene almacenes almacenes registrados
                $MyRESP["Codigo"] = 0;
                $MyRESP["Existencia"] = 0;
                $arrAlmacenes = array();
                foreach($MyAlmacenes as $Almacen){
                    $arrAlmacenes[$Almacen->id_SDK] = $MyProductoSdk->http_ExistenciaAlmacen($CodigoProducto, $Almacen->id_SDK);
                    $MyRESP["Existencia"] += $arrAlmacenes[$Almacen->id_SDK];
                }
                $MyRESP["Almacenes"] = json_encode($arrAlmacenes);
                $this->auditar("Producto: ".$CodigoProducto."| Ex.Global: ".$MyRESP["Almacenes"]."| Ex.Alacenes: ".$MyRESP["Almacenes"]);
            }else{ //Error la caja no tiene almacenes registrados
                $MyRESP["Codigo"] = 404;
            }
    
            return json_encode($MyRESP);
        } catch (Exception $e) {
            mostrar_error($e);
        }                
    }
    /** ****************************************************** **/
    public function get_ExistenciaAlmacenCaracteristicas(){
        try {
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');
            $MyRESP = array();

            $MyProductoSdk = new COM("ContPAQi.ProductoSdk");
            $MyProductoSdk->setNoCaja($_SESSION["caja"]["id"]);
            //Creamos el objeto << ALMACENES DE CAJA >>
            $cajas_almacenes = new Tpv_cajas_almacenes($this->adaptador);
            $MyAlmacenes = $cajas_almacenes->getBy("id_caja", $_SESSION["caja"]["id"]);
            if(!empty($MyAlmacenes)){ //La caja tiene almacenes almacenes registrados
                $MyRESP["Codigo"] = 0;
                $MyRESP["Existencia"] = 0;
                $arrAlmacenes = array();
                foreach($MyAlmacenes as $Almacen){
                    $this->auditar($_POST["codigo"]."|".$Almacen->id_SDK."|".$_POST["caracteristica1"]."|".$_POST["caracteristica2"]."|".$_POST["caracteristica3"]);
                    $arrAlmacenes[$Almacen->id_SDK] = $MyProductoSdk->http_ExistenciaAlmacenCaracteristicas($_POST["codigo"], $Almacen->id_SDK, $_POST["caracteristica1"], $_POST["caracteristica2"], $_POST["caracteristica3"]);
                    $MyRESP["Existencia"] += $arrAlmacenes[$Almacen->id_SDK];
                }
                $MyRESP["Almacenes"] = json_encode($arrAlmacenes);
                $this->auditar("Producto: ".$_POST["codigo"]."| Ex.Global: ".$MyRESP["Almacenes"]."| Ex.Alacenes: ".$MyRESP["Almacenes"]);
            }else{ //Error la caja no tiene almacenes registrados
                $MyRESP["Codigo"] = 404;
            }
    
            echo json_encode($MyRESP);
        } catch (Exception $e) {
            mostrar_error($e);
        }                
    }
    /** ****************************************************** **/        
    public function get_Caracteristicas(){
        try {
            chkSesion();
            header('Content-Type: application/json; charset=UTF8');
            $MyRESP = array();

            if( isset($_POST['codigo']) && ($_POST['codigo'] != '')){
                //Busco los datos del producto en el Middleware
                $MyComercial = new COM("ContPAQi.CiComercialSdk");
                //Buscando el producto
                $jsonSTR = $MyComercial->get_Caracteristicas($_POST['codigo'], $_SESSION["caja"]["id"]);
                $json_OBJ = json_decode($jsonSTR); //Json a Objeto

            }else{
                $MyRESP["Codigo"] = 403;
            }

            echo json_encode($MyRESP);

        } catch (Exception $e) {
            mostrar_error($e);
        }

     }
    /** ****************************************************** **/

   /**
     * CONTROL DE INTERFACES PARA EL USUARIO (Carga dinamica de interfaces)
     *  **/
    /** ****************************************************** **/
    public function iface_dinero_apertura(){
        try {

            $this->view("_header_app", array(null));
            $this->view("tpv/tpv_dinero_apertura", array(null));
            $this->view("_footer_app", array(null));

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ****************************************************** **/
    /** ****************************************************** **/
    /** ****************************************************** **/

}
?>
